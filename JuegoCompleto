#include <stdio.h>
#include <string.h>
#include <conio.h>

// definimos la baraja de cartas

#define PALOS 4
#define NUMEROS 10
#define CARTAS (NUMEROS*PALOS)

typedef enum Palo {
	Oros,
	Copas,
	Espadas,
	Bastos,
} Palo;

typedef struct Carta {
	Palo palo;
	int numero;
} Carta;

typedef Carta Baraja[CARTAS];

// se inicializa la baraja

void inicializarBaraja (Baraja baraja) {
	int i;
	int j;
	for (i=0; i<PALOS; i++) {
		for (j=0; j<NUMEROS; j++) {
			baraja[NUMEROS*i+j].palo = i;
			baraja[NUMEROS*i+j].numero = j;
		}
	}
}


// para intercambiar dos cartas

void intercambiar (Carta *c1, Carta *c2) {
	Carta aux;
	aux = *c1;
	*c1 = *c2;
	*c2 = aux;
}


// para mezclar de una forma aleatoria todas las cartas de la baraja

void barajar (Baraja baraja) {
	int cambios;
	int i, c1, c2;
	
	//inicializar el generador de numeros aleatorios
	
	srand(time(NULL)); //utilizo el srand para que no salga siempre el mismo numero de cartas
	
	// el numero de intercambios de cartas (va de 1 a 2000)
	
	cambios = 20 + (rand() % 1000);
	
	// para intercambiar las cartas
	
	for(i=0; i<cambios; i++) {
		c1 = rand() % CARTAS;
		c2 = rand() % CARTAS;
		intercambiar( &(baraja[c1]), &(baraja[c2]));
	}
}

// mostrar en pantalla las cartas

void mostrarCarta (Carta carta) {
	char palo[10];
	char numero[10];
	
	// los tipos de palo
	
	switch (carta.palo) {
		
		case Oros:
			strcpy (palo, "Oros");
			break;
		
		case Copas:
			strcpy (palo, "Copas");
			break;
			
		case Espadas:
			strcpy (palo, "Espadas");
			break;
			
		case Bastos:
			strcpy (palo, "Bastos");
			break;
	}
	
	// el numero de la carta
	
	if (carta.numero<7) {
	
		sprintf (numero, "%d", carta.numero + 1);
		
	} else if (carta.numero == 7) {
		strcpy (numero, "Sota");
	
	} else if (carta.numero == 8) {
		strcpy (numero, "Caballo");
	
	} else if (carta.numero == 9) {
		strcpy (numero, "Rey");
	
	}
	
	printf("%s de %s \n", numero, palo);
}

// mostrar en pantalla la baraja

void mostrarBaraja (Baraja baraja) {
	int i;	
	for (i =0; i<CARTAS; i++)
		mostrarCarta(baraja[i]);
}

// preguntar al jugador si quiere o no carta (si/no)

int preguntar (char * pregunta) {
	char c;
	
	do {
		printf("%s (s/n) \n", pregunta);
		c = getch();
	} while ((c!= 's') && (c!= 'S') && (c!= 'n') && (c!= 'N'));
	
	if ((c == 's') || (c == 'S'))
		return 1;
	else 
		return 0;
}

void pregunta (char * pregunta) {
	printf("%si\no", pregunta);
}

// devolver el valor de la carta

float puntos (Carta carta) {
	if (carta.numero<7)
		return carta.numero + 1;	
	else 
		return 0.5;
}

// decision del ordenador de seguir o no

int pedir_otra_carta (float mis_puntos, float tus_puntos) {
	return(tus_puntos <= 7.5) && ((mis_puntos<tus_puntos) || (mis_puntos<5));
}

// ¿el jugador gana la partida?

int gana_jugador (float puntos_jugador, float puntos_ordenador) {
	return (puntos_jugador <= 7.5) && ((puntos_jugador > puntos_ordenador) || (puntos_ordenador > 7.5));
}
	
// dar y devolver el valor de la carta	

float dar_carta (Baraja baraja, int *carta_actual, char *jugador) {
	
	float valor = puntos (baraja[*carta_actual]);
	printf("Carta para %s: ", jugador);
	mostrarCarta(baraja[*carta_actual]);
	(*carta_actual)++;
	return valor;
}

//el menu del juego

void juego (Baraja baraja) {

	printf("+--------------------------------+\n");
	printf("| BIENVENIDO A LAS SIETE Y MEDIA |\n");
	printf("+--------------------------------+\n");
	
	int carta_actual;
	float puntos_jugador, puntos_ordenador;
	int jugador_sigue, ordenador_sigue;
	
	carta_actual = 0;
	puntos_jugador = 0;
	puntos_ordenador = 0;
	jugador_sigue = 1;
	ordenador_sigue = 1;
	
	do {
		// carta para el jugador
		
		if (jugador_sigue) {
		
			if (pregunta("¿Quieres una carta?")) {
				puntos_jugador += dar_carta(baraja, &carta_actual, "el jugador");
			
				if (puntos_jugador > 7.5) {
					pregunta("Te has pasado... :(");
					jugador_sigue = 0;
				}
			} else {
				jugador_sigue = 0;
			}
		}
		
		// carta para el ordenador
		
		if (ordenador_sigue) {
			
			if (pedir_otra_carta (puntos_ordenador, puntos_jugador)) {
				puntos_ordenador += dar_carta(baraja, &carta_actual, "el ordenador");
				
				if (puntos_ordenador > 7.5) {
					pregunta("El ordenador se ha pasado...");
					ordenador_sigue = 0;
				}
			} else {
				pregunta("El ordenador se planta");
				ordenador_sigue = 0;
			}
		}
		
		printf(" - Jugador: %.1f puntos \n", puntos_jugador);
		printf(" - Ordenador: %.1f puntos \n", puntos_ordenador);
		
	} while (jugador_sigue || ordenador_sigue);
	
	// resultado de la partida
	
	if (gana_jugador(puntos_jugador, puntos_ordenador))
		pregunta("ENHORABUENA HAS GANADO!!! :)\n");
	else
		pregunta("Has perdido... Otra vez sera :( \n");
		
}

// programa principal

int main (void) {

	Baraja baraja;
	inicializarBaraja(baraja);
	
	do {
		barajar(baraja);
		juego(baraja);
	} while (preguntar("¿Quieres jugar otra partida?"));
	
	return 0;
}
		
		
	
	

		










